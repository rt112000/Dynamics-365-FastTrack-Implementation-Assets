<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">&lt;Replace your value&gt;.sandbox.operations.dynamics.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tenant" elementType="Argument">
            <stringProp name="Argument.name">tenant</stringProp>
            <stringProp name="Argument.value">&lt;Replace your value&gt;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Comment4406_0" elementType="Argument">
            <stringProp name="Argument.name">Comment4406_0</stringProp>
            <stringProp name="Argument.value">NOTFOUND</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="retried" elementType="Argument">
            <stringProp name="Argument.name">retried</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${host}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:/apache-jmeter/bin/FnO_Sample/login.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">userEmail,password</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">15</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1. Access to Finance and Operations apps" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/complete/search-4" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client</stringProp>
                    <stringProp name="Argument.value">firefox</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="q" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">q</stringProp>
                    <stringProp name="Argument.value">d36</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/complete/search</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/complete/search-5" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client</stringProp>
                    <stringProp name="Argument.value">firefox</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="q" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">q</stringProp>
                    <stringProp name="Argument.value">d365</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/complete/search</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/v4/fullHashes:find-7" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="$ct" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">$ct</stringProp>
                    <stringProp name="Argument.value">application/x-protobuf</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">key</stringProp>
                    <stringProp name="Argument.value">AIzaSyC7jsptDS3am4tPx4r3nxis7IMjBc5Dovo</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="$httpMethod" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">$httpMethod</stringProp>
                    <stringProp name="Argument.value">POST</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="$req" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">$req</stringProp>
                    <stringProp name="Argument.value">ChUKE25hdmNsaWVudC1hdXRvLWZmb3gSGwoNCAUQBhgBIgMwMDEwARC3iRIaAhgDpwMAaBouCAUQARoGCgQKFjbBGgYKBChE524aBgoEQn2lxxoGCgRer6SNGgYKBKEKi1YgAQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">safebrowsing.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v4/fullHashes:find</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-HTTP-Method-Override" elementType="Header">
                    <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/-6" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - state1" enabled="true">
                <stringProp name="RegexExtractor.refname">state1</stringProp>
                <stringProp name="RegexExtractor.regex">&amp;state=([^&amp;]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">state1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - nonce" enabled="true">
                <stringProp name="RegexExtractor.refname">nonce</stringProp>
                <stringProp name="RegexExtractor.regex">nonce=([A-Za-z0-9-.]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">nonce_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/${tenant}/oauth2/authorize-8" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">00000015-0000-0000-c000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__urldecode(${state1})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${nonce}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="max_age" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">max_age</stringProp>
                    <stringProp name="Argument.value">86400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - state1" enabled="true">
                <stringProp name="RegexExtractor.refname">state1</stringProp>
                <stringProp name="RegexExtractor.regex">&amp;state=([^&amp;]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">state1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/${tenant}/oauth2/authorize-9" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">00000015-0000-0000-c000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__urldecode(${state1})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${nonce}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="max_age" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">max_age</stringProp>
                    <stringProp name="Argument.value">86400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgid</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgact" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgact</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgact_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Client-request-id" enabled="true">
                <stringProp name="RegexExtractor.refname">Client-request-id</stringProp>
                <stringProp name="RegexExtractor.regex">client-request-id=(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Client-request-id_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgrequestid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - ApiCanary" enabled="true">
                <stringProp name="RegexExtractor.refname">ApiCanary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">ApiCanary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Canary" enabled="true">
                <stringProp name="RegexExtractor.refname">Canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Canary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Ctx" enabled="true">
                <stringProp name="RegexExtractor.refname">Ctx</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Ctx_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - Canary2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Canary2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;canary&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default">Canary2_NOT_FOUND</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/dbd5a2dd-algbi1h52eyl2gwogqguda4qgzbfqd-xjnk0tnx0pme/logintenantbranding/0/bannerlogo-18" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ts</stringProp>
                    <stringProp name="Argument.value">637407949695731651</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">aadcdn.msftauthimages.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/dbd5a2dd-algbi1h52eyl2gwogqguda4qgzbfqd-xjnk0tnx0pme/logintenantbranding/0/bannerlogo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/shared/1.0/content/images/signin-options_3e3f6b73c3f310c31d2c4d131a8ab8c6.svg-20" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">aadcdn.msftauth.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/shared/1.0/content/images/signin-options_3e3f6b73c3f310c31d2c4d131a8ab8c6.svg</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/dbd5a2dd-algbi1h52eyl2gwogqguda4qgzbfqd-xjnk0tnx0pme/logintenantbranding/0/illustration-19" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ts</stringProp>
                    <stringProp name="Argument.value">637409130131726771</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">aadcdn.msftauthimages.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/dbd5a2dd-algbi1h52eyl2gwogqguda4qgzbfqd-xjnk0tnx0pme/logintenantbranding/0/illustration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Me.htm-17" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Purpose" elementType="Header">
                    <stringProp name="Header.name">Sec-Purpose</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/common/GetCredentialType?mkt=en-US-23" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${userEmail}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${Ctx}&quot;,&quot;country&quot;:&quot;HK&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${SFT}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/${tenant}/oauth2/authorize?client_id=00000015-0000-0000-c000-000000000000&amp;response_mode=form_post&amp;response_type=code+id_token&amp;scope=openid+profile&amp;state=${__urldecode(${state1})}(${state1})}(${state1})}(${state1})}</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">${Hpgact}</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">${Canary2}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">${Hpgrequestid}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">${Hpgid}</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">${Client-request-id}</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT1" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT1</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;FlowToken&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/shared/1.0/content/images/arrow_left_43280e0ba671a1d8b5e34f1931c4fe4b.svg-25" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">aadcdn.msftauth.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/shared/1.0/content/images/arrow_left_43280e0ba671a1d8b5e34f1931c4fe4b.svg</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;w=0-26" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">browser.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;w=0</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">apikey,cache-control,client-id,client-version,content-type,time-delta-to-apply-millis,upload-time</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;w=0-27" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;name&quot;:&quot;IDUX_ESTSClientTelemetryEvent_WebWatson&quot;,&quot;time&quot;:&quot;2023-08-10T15:24:13.747Z&quot;,&quot;ver&quot;:&quot;4.0&quot;,&quot;iKey&quot;:&quot;o:69adc3c768bd4dc08c19416121249fcc&quot;,&quot;ext&quot;:{&quot;app&quot;:{&quot;ver&quot;:&quot;2.1.16042.2&quot;,&quot;name&quot;:&quot;IDUX_ESTSClientTelemetryEvent_WebWatson&quot;,&quot;sesId&quot;:&quot;FFOfY4l5p69VrMIS0bNNOx&quot;,&quot;userId&quot;:&quot;p: 1800&quot;,&quot;locale&quot;:&quot;en&quot;},&quot;cloud&quot;:{&quot;role&quot;:&quot;NCUS&quot;,&quot;roleInstance&quot;:&quot;CH1XXXX&quot;,&quot;roleVer&quot;:&quot;2.1.16042.2&quot;},&quot;sdk&quot;:{&quot;ver&quot;:&quot;1DS-Web-JS-3.2.6&quot;,&quot;seq&quot;:1,&quot;installId&quot;:&quot;7c8902f1-9252-4287-833e-4bd00e3e5751&quot;,&quot;epoch&quot;:&quot;2092536109&quot;},&quot;user&quot;:{&quot;locale&quot;:&quot;en-US&quot;},&quot;web&quot;:{&quot;domain&quot;:&quot;login.microsoftonline.com&quot;,&quot;userConsent&quot;:false},&quot;intweb&quot;:{},&quot;utc&quot;:{&quot;popSample&quot;:100,&quot;eventFlags&quot;:1048576},&quot;loc&quot;:{&quot;tz&quot;:&quot;+08:00&quot;},&quot;metadata&quot;:{&quot;f&quot;:{&quot;viewId&quot;:{&quot;t&quot;:6}}}},&quot;data&quot;:{&quot;baseData&quot;:{&quot;properties&quot;:{&quot;version&quot;:&quot;&quot;}},&quot;viewId&quot;:1,&quot;Data&quot;:&quot;{\&quot;pltMetrics\&quot;:{\&quot;apiTimingInfo\&quot;:[],\&quot;isPlt1\&quot;:false,\&quot;plt\&quot;:1170,\&quot;timing\&quot;:{\&quot;navigationStart\&quot;:1691681049687,\&quot;unloadEventStart\&quot;:0,\&quot;unloadEventEnd\&quot;:0,\&quot;redirectStart\&quot;:0,\&quot;redirectEnd\&quot;:0,\&quot;fetchStart\&quot;:1691681048920,\&quot;domainLookupStart\&quot;:1691681048930,\&quot;domainLookupEnd\&quot;:1691681048930,\&quot;connectStart\&quot;:1691681048931,\&quot;connectEnd\&quot;:1691681048931,\&quot;secureConnectionStart\&quot;:1691681048931,\&quot;requestStart\&quot;:1691681048931,\&quot;responseStart\&quot;:1691681048932,\&quot;responseEnd\&quot;:1691681049681,\&quot;domLoading\&quot;:1691681049688,\&quot;domInteractive\&quot;:1691681049953,\&quot;domContentLoadedEventStart\&quot;:1691681049953,\&quot;domContentLoadedEventEnd\&quot;:1691681049959,\&quot;domComplete\&quot;:1691681050055,\&quot;loadEventStart\&quot;:1691681050055,\&quot;loadEventEnd\&quot;:1691681050090},\&quot;pltOverallTransferBucket\&quot;:4,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;pageSource\&quot;:\&quot;LPerf\&quot;},\&quot;ClientEvents\&quot;:[{\&quot;ID\&quot;:11008,\&quot;EventTime\&quot;:1691681051931,\&quot;Value\&quot;:\&quot;Email_Phone_Skype_Entry\&quot;,\&quot;DataViewID\&quot;:\&quot;1\&quot;},{\&quot;ID\&quot;:11009,\&quot;EventTime\&quot;:1691681053230,\&quot;Value\&quot;:\&quot;Submit\&quot;,\&quot;DataViewID\&quot;:\&quot;1\&quot;}]}&quot;,&quot;ServerPageID&quot;:&quot;1104&quot;,&quot;PageName&quot;:&quot;ConvergedSignIn&quot;,&quot;ServiceID&quot;:&quot;3&quot;,&quot;CorrelationId&quot;:&quot;af356faa-20f3-4a2a-99d3-3ba48e2558a7&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">browser.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;w=0</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="upload-time" elementType="Header">
                    <stringProp name="Header.name">upload-time</stringProp>
                    <stringProp name="Header.value">1691681055763</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="apikey" elementType="Header">
                    <stringProp name="Header.name">apikey</stringProp>
                    <stringProp name="Header.value">69adc3c768bd4dc08c19416121249fcc-66f1668a-797b-4249-95e3-6c6651768c28-7293</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="client-version" elementType="Header">
                    <stringProp name="Header.name">client-version</stringProp>
                    <stringProp name="Header.value">1DS-Web-JS-3.2.6</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="time-delta-to-apply-millis" elementType="Header">
                    <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                    <stringProp name="Header.value">use-collector-delta</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-json-stream</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="cache-control" elementType="Header">
                    <stringProp name="Header.name">cache-control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/-29" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">push.services.mozilla.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                    <stringProp name="Header.value">push-notification</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                    <stringProp name="Header.value">permessage-deflate</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">wss://push.services.mozilla.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">7p3crul1pT1BckFIngWM3w==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/${tenant}/login-28" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${userEmail}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${userEmail}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${Canary2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${Ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${Hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${SFT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">7291</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/${tenant}/oauth2/authorize?client_id=00000015-0000-0000-c000-000000000000&amp;response_mode=form_post&amp;response_type=code+id_token&amp;scope=openid+profile&amp;state=${__urldecode(${state1})}(${state1})}(${state1})}(${state1})}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgid</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgact" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgact</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgact_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgrequestid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - ApiCanary" enabled="true">
                <stringProp name="RegexExtractor.refname">ApiCanary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">ApiCanary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Canary" enabled="true">
                <stringProp name="RegexExtractor.refname">Canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Canary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Ctx" enabled="true">
                <stringProp name="RegexExtractor.refname">Ctx</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Ctx_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - Canary2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Canary2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;canary&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default">Canary2_NOT_FOUND</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-3.2.6&amp;apikey=69adc3c768bd4dc08c19416121249fcc-66f1668a-797b-4249-95e3-6c6651768c28-7293&amp;upload-time=1691681058427&amp;ext.intweb.msfpc=GUID%3Df6664a8f43f543ab96283d0eba14170a%26HASH%3Df666%26LV%3D202308%26V%3D4%26LU%3D1691681056879&amp;time-delta-to-apply-millis=1116&amp;w=0&amp;NoResponseBody=true-30" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;name&quot;:&quot;IDUX_ESTSClientTelemetryEvent_WebWatson&quot;,&quot;time&quot;:&quot;2023-08-10T15:24:18.426Z&quot;,&quot;ver&quot;:&quot;4.0&quot;,&quot;iKey&quot;:&quot;o:69adc3c768bd4dc08c19416121249fcc&quot;,&quot;ext&quot;:{&quot;app&quot;:{&quot;ver&quot;:&quot;2.1.16042.2&quot;,&quot;name&quot;:&quot;IDUX_ESTSClientTelemetryEvent_WebWatson&quot;,&quot;sesId&quot;:&quot;FFOfY4l5p69VrMIS0bNNOx&quot;,&quot;userId&quot;:&quot;p: 1800&quot;,&quot;locale&quot;:&quot;en&quot;},&quot;cloud&quot;:{&quot;role&quot;:&quot;NCUS&quot;,&quot;roleInstance&quot;:&quot;CH1XXXX&quot;,&quot;roleVer&quot;:&quot;2.1.16042.2&quot;},&quot;sdk&quot;:{&quot;ver&quot;:&quot;1DS-Web-JS-3.2.6&quot;,&quot;seq&quot;:2,&quot;installId&quot;:&quot;7c8902f1-9252-4287-833e-4bd00e3e5751&quot;,&quot;epoch&quot;:&quot;2092536109&quot;},&quot;user&quot;:{&quot;locale&quot;:&quot;en-US&quot;},&quot;web&quot;:{&quot;domain&quot;:&quot;login.microsoftonline.com&quot;,&quot;userConsent&quot;:false},&quot;intweb&quot;:{&quot;msfpc&quot;:&quot;GUID=f6664a8f43f543ab96283d0eba14170a&amp;HASH=f666&amp;LV=202308&amp;V=4&amp;LU=1691681056879&quot;},&quot;utc&quot;:{&quot;popSample&quot;:100,&quot;eventFlags&quot;:1048576},&quot;loc&quot;:{&quot;tz&quot;:&quot;+08:00&quot;},&quot;metadata&quot;:{&quot;f&quot;:{&quot;viewId&quot;:{&quot;t&quot;:6}}}},&quot;data&quot;:{&quot;baseData&quot;:{&quot;properties&quot;:{&quot;version&quot;:&quot;&quot;}},&quot;viewId&quot;:2,&quot;Data&quot;:&quot;{\&quot;ClientEvents\&quot;:[{\&quot;ID\&quot;:11009,\&quot;EventTime\&quot;:1691681057382,\&quot;Value\&quot;:\&quot;Submit\&quot;,\&quot;DataViewID\&quot;:\&quot;2\&quot;}]}&quot;,&quot;ServerPageID&quot;:&quot;1104&quot;,&quot;PageName&quot;:&quot;ConvergedSignIn&quot;,&quot;ServiceID&quot;:&quot;3&quot;,&quot;CorrelationId&quot;:&quot;af356faa-20f3-4a2a-99d3-3ba48e2558a7&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">browser.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-3.2.6&amp;apikey=69adc3c768bd4dc08c19416121249fcc-66f1668a-797b-4249-95e3-6c6651768c28-7293&amp;upload-time=1691681058427&amp;ext.intweb.msfpc=GUID%3Df6664a8f43f543ab96283d0eba14170a%26HASH%3Df666%26LV%3D202308%26V%3D4%26LU%3D1691681056879&amp;time-delta-to-apply-millis=1116&amp;w=0&amp;NoResponseBody=true</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/kmsi-34" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${Ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${Hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${SFT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${Canary2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">3909</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/${tenant}/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - code" enabled="true">
                <stringProp name="RegexExtractor.refname">code</stringProp>
                <stringProp name="RegexExtractor.regex">name=&quot;code&quot; value=&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">code_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Idtoken" enabled="true">
                <stringProp name="RegexExtractor.refname">Idtoken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id_token&quot; value=&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Idtoken_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SessionState" enabled="true">
                <stringProp name="RegexExtractor.refname">SessionState</stringProp>
                <stringProp name="RegexExtractor.regex">name=&quot;session_state&quot; value=&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SessionState_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/-35" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="code" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code</stringProp>
                    <stringProp name="Argument.value">${code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="id_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id_token</stringProp>
                    <stringProp name="Argument.value">${Idtoken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__urldecode(${state1})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="session_state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">session_state</stringProp>
                    <stringProp name="Argument.value">${SessionState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/-37" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?-59" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;&quot;,&quot;Language&quot;:&quot;&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:0,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetFormInteraction&quot;,&quot;ObjectName&quot;:&quot;sysloadstartpage&quot;,&quot;OpenMethod&quot;:2,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;1&quot;,&quot;CallbackId&quot;:&quot;1&quot;}],&quot;SequenceNumber&quot;:1}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">ea439f91-c291-4b4c-ad14-051843205404</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">da0e1592-d6de-4f67-84dc-6fa1c052dacc</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">tz5LfPMcsLyaeeQ7QOesQQ%3D%3D.jwUbA1LZeLXknCXT%2BoZ58YammWUJ7LkmrzOrxx6oWOfpZCj9zDjSpta0l0dkmVIIwEY71%2F83zKUhRbVl2dWC1pQ9FgF%2BxSmC3%2FMZTONUo2gVCJJx0vP2ZIsU1Llg0x%2BheQcFO2m08XKfWLHMgcJuLoGapblAi0MJIUpctsG1FgChl9mutzSDhO3Lq6ckmaWbpOYqowwCf8PCsW%2Fdw2FrS3t%2BIORkAREprqRDTovK2Tji1apzT1kOsvDdWN4VyiEayLy6ASWS%2BcYwZ7w8i3WHAOAfXD%2FD%2F%2BIOPiDnaqw6E9i2Fzhjkd80tnt3M4AfwxKXDUFV2Jgvjxz7Ku9w%2BLd%2Fww%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#115" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#115</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#115_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#116" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#116</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#116_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorDefaultDashboard_form3_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">DefaultDashboard_form3_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;DefaultDashboard_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor__TimerForAsyncTaskPolling6_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">__TimerForAsyncTaskPolling6_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;__TimerForAsyncTaskPolling&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/resources/html/Calendar.htm-61" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/html/Calendar.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/resources/html/TimerControl.htm-62" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/html/TimerControl.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-63" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:1,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;GetMenuPaneSettings&quot;,&quot;CallbackId&quot;:&quot;2&quot;}],&quot;SequenceNumber&quot;:2},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneTopLevelSitemapMenu&quot;,&quot;CallbackId&quot;:&quot;3&quot;}],&quot;SequenceNumber&quot;:3},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;4&quot;}],&quot;SequenceNumber&quot;:4},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveRecentlyUsedMenuItems&quot;,&quot;CallbackId&quot;:&quot;5&quot;}],&quot;SequenceNumber&quot;:5},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneTopLevelSitemapMenu&quot;,&quot;CallbackId&quot;:&quot;6&quot;}],&quot;SequenceNumber&quot;:6},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneMenu&quot;,&quot;CallbackId&quot;:&quot;7&quot;}],&quot;SequenceNumber&quot;:7},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveRecentlyUsedMenuItems&quot;,&quot;CallbackId&quot;:&quot;8&quot;}],&quot;SequenceNumber&quot;:8}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">af5b71a8-9ec9-4c75-acbd-19a393b2828e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">da0e1592-d6de-4f67-84dc-6fa1c052dacc</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#115}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">tz5LfPMcsLyaeeQ7QOesQQ%3D%3D.jwUbA1LZeLXknCXT%2BoZ58YammWUJ7LkmrzOrxx6oWOfpZCj9zDjSpta0l0dkmVIIwEY71%2F83zKUhRbVl2dWC1pQ9FgF%2BxSmC3%2FMZTONUo2gVCJJx0vP2ZIsU1Llg0x%2BheQcFO2m08XKfWLHMgcJuLoGapblAi0MJIUpctsG1FgChl9mutzSDhO3Lq6ckmaWbpOYqowwCf8PCsW%2Fdw2FrS3t%2BIORkAREprqRDTovK2Tji1apzT1kOsvDdWN4VyiEayLy6ASWS%2BcYwZ7w8i3WHAOAfXD%2FD%2F%2BIOPiDnaqw6E9i2Fzhjkd80tnt3M4AfwxKXDUFV2Jgvjxz7Ku9w%2BLd%2Fww%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#123" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#123</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#123_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#124" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#124</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#124_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/conf/v2/d365fo/fpconfig.min.json-67" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="monitorId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">monitorId</stringProp>
                    <stringProp name="Argument.value">d365fo</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">fpc.msedge.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/conf/v2/d365fo/fpconfig.min.json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/autodiscover/autodiscoverservice.svc/root-64" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">webdir.online.lync.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/autodiscover/autodiscoverservice.svc/root</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-readded" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:2,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;9&quot;}],&quot;SequenceNumber&quot;:9}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">8b231d79-d655-4199-b665-bec15cd5c62e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">da0e1592-d6de-4f67-84dc-6fa1c052dacc</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#115}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">tz5LfPMcsLyaeeQ7QOesQQ%3D%3D.jwUbA1LZeLXknCXT%2BoZ58YammWUJ7LkmrzOrxx6oWOfpZCj9zDjSpta0l0dkmVIIwEY71%2F83zKUhRbVl2dWC1pQ9FgF%2BxSmC3%2FMZTONUo2gVCJJx0vP2ZIsU1Llg0x%2BheQcFO2m08XKfWLHMgcJuLoGapblAi0MJIUpctsG1FgChl9mutzSDhO3Lq6ckmaWbpOYqowwCf8PCsW%2Fdw2FrS3t%2BIORkAREprqRDTovK2Tji1apzT1kOsvDdWN4VyiEayLy6ASWS%2BcYwZ7w8i3WHAOAfXD%2FD%2F%2BIOPiDnaqw6E9i2Fzhjkd80tnt3M4AfwxKXDUFV2Jgvjxz7Ku9w%2BLd%2Fww%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#132" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#132</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#132_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#133" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#133</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#133_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-70" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:3,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;9&quot;}],&quot;SequenceNumber&quot;:10},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;SysMenuSettings&quot;},&quot;CallbackId&quot;:&quot;11&quot;}],&quot;SequenceNumber&quot;:11},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;SysMenuHelp&quot;},&quot;CallbackId&quot;:&quot;12&quot;}],&quot;SequenceNumber&quot;:12}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">a7200f5b-5881-4460-b844-d471a445101f</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">da0e1592-d6de-4f67-84dc-6fa1c052dacc</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#115}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">tz5LfPMcsLyaeeQ7QOesQQ%3D%3D.jwUbA1LZeLXknCXT%2BoZ58YammWUJ7LkmrzOrxx6oWOfpZCj9zDjSpta0l0dkmVIIwEY71%2F83zKUhRbVl2dWC1pQ9FgF%2BxSmC3%2FMZTONUo2gVCJJx0vP2ZIsU1Llg0x%2BheQcFO2m08XKfWLHMgcJuLoGapblAi0MJIUpctsG1FgChl9mutzSDhO3Lq6ckmaWbpOYqowwCf8PCsW%2Fdw2FrS3t%2BIORkAREprqRDTovK2Tji1apzT1kOsvDdWN4VyiEayLy6ASWS%2BcYwZ7w8i3WHAOAfXD%2FD%2F%2BIOPiDnaqw6E9i2Fzhjkd80tnt3M4AfwxKXDUFV2Jgvjxz7Ku9w%2BLd%2Fww%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#135" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#135</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#135_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#136" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#136</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#136_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-71" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:4,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;13&quot;,&quot;CommandName&quot;:&quot;Elapsed&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${DefaultDashboard_form3_0}&quot;,&quot;TargetId&quot;:&quot;${__TimerForAsyncTaskPolling6_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:13}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">8b231d79-d655-4199-b665-bec15cd5c62e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">da0e1592-d6de-4f67-84dc-6fa1c052dacc</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#115}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">tz5LfPMcsLyaeeQ7QOesQQ%3D%3D.jwUbA1LZeLXknCXT%2BoZ58YammWUJ7LkmrzOrxx6oWOfpZCj9zDjSpta0l0dkmVIIwEY71%2F83zKUhRbVl2dWC1pQ9FgF%2BxSmC3%2FMZTONUo2gVCJJx0vP2ZIsU1Llg0x%2BheQcFO2m08XKfWLHMgcJuLoGapblAi0MJIUpctsG1FgChl9mutzSDhO3Lq6ckmaWbpOYqowwCf8PCsW%2Fdw2FrS3t%2BIORkAREprqRDTovK2Tji1apzT1kOsvDdWN4VyiEayLy6ASWS%2BcYwZ7w8i3WHAOAfXD%2FD%2F%2BIOPiDnaqw6E9i2Fzhjkd80tnt3M4AfwxKXDUFV2Jgvjxz7Ku9w%2BLd%2Fww%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#139" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#139</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#139_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#140" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#140</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#140_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login/Services/TelemetryManager.svc/ProcessEventData-77" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;SessionActionEventData&quot;,&quot;SessionAction&quot;:0,&quot;UserAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0&quot;,&quot;BrowserName&quot;:&quot;Firefox&quot;,&quot;BrowserVersion&quot;:&quot;116.0&quot;,&quot;OperatingSystem&quot;:&quot;Windows 10&quot;,&quot;CpuClass&quot;:&quot;amd64&quot;,&quot;BrowserLanguage&quot;:&quot;en-US&quot;,&quot;OSLanguage&quot;:&quot;&quot;,&quot;ApplicationLanguage&quot;:&quot;en-us&quot;,&quot;Locale&quot;:&quot;en-US&quot;,&quot;Density&quot;:&quot;30&quot;,&quot;Theme&quot;:&quot;0&quot;,&quot;ClientVersion&quot;:&quot;7.0.23178.2&quot;,&quot;Device&quot;:&quot;&quot;,&quot;TouchEnabled&quot;:true,&quot;ScreenResolution&quot;:&quot;2560x1392&quot;,&quot;ViewPortSize&quot;:&quot;1370x945&quot;,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1691681071717},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:355,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1691681074761},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:4626,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1691681074761},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1691681074761},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1555,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1691681074761}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=DefaultDashboard</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">ea439f91-c291-4b4c-ad14-051843205404</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">da0e1592-d6de-4f67-84dc-6fa1c052dacc</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#115}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/116.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">tz5LfPMcsLyaeeQ7QOesQQ%3D%3D.jwUbA1LZeLXknCXT%2BoZ58YammWUJ7LkmrzOrxx6oWOfpZCj9zDjSpta0l0dkmVIIwEY71%2F83zKUhRbVl2dWC1pQ9FgF%2BxSmC3%2FMZTONUo2gVCJJx0vP2ZIsU1Llg0x%2BheQcFO2m08XKfWLHMgcJuLoGapblAi0MJIUpctsG1FgChl9mutzSDhO3Lq6ckmaWbpOYqowwCf8PCsW%2Fdw2FrS3t%2BIORkAREprqRDTovK2Tji1apzT1kOsvDdWN4VyiEayLy6ASWS%2BcYwZ7w8i3WHAOAfXD%2FD%2F%2BIOPiDnaqw6E9i2Fzhjkd80tnt3M4AfwxKXDUFV2Jgvjxz7Ku9w%2BLd%2Fww%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2. Go to SO List page" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-2" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:43,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;SalesAndMarketing&quot;},&quot;CallbackId&quot;:&quot;14&quot;}],&quot;SequenceNumber&quot;:14}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=DefaultDashboard</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">b18b61a6-e81d-4f16-a9a3-1c92a355758a</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#115}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#3" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#3</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#3_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#4" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#4</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#4_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-3" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:4,&quot;EventGroupId&quot;:16,&quot;EventTimestamp&quot;:1692933566676},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1022,&quot;EventGroupId&quot;:16,&quot;EventTimestamp&quot;:1692933566676},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:42,&quot;EventGroupId&quot;:16,&quot;EventTimestamp&quot;:1692933566676},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:16,&quot;EventTimestamp&quot;:1692933566676}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=DefaultDashboard</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">b18b61a6-e81d-4f16-a9a3-1c92a355758a</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-4" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:44,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetFormInteraction&quot;,&quot;NavigationPath&quot;:[&quot;mainmenu&quot;,&quot;SalesAndMarketing&quot;,&quot;SalesOrders&quot;],&quot;ObjectName&quot;:&quot;salestablelistpage&quot;,&quot;OpenMethod&quot;:${retried},&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;10&quot;,&quot;CallbackId&quot;:&quot;15&quot;}],&quot;SequenceNumber&quot;:15}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=DefaultDashboard</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">2fc06422-392a-47ab-8b8a-bd2b2648bdda</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#7" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#7</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#7_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#8" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#8</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#8_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesTableListPage_form10625_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesTableListPage_form10625_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesTableListPage_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorGrid10837_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">Grid10837_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;Grid&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesTable_CustAccountAdv10890_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesTable_CustAccountAdv10890_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesTable_CustAccountAdv&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSystemDefinedNewButton10848_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SystemDefinedNewButton10848_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SystemDefinedNewButton&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-6" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:5,&quot;EventGroupId&quot;:17,&quot;EventTimestamp&quot;:1692933570089},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1215,&quot;EventGroupId&quot;:17,&quot;EventTimestamp&quot;:1692933570089},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:508,&quot;EventGroupId&quot;:17,&quot;EventTimestamp&quot;:1692933570089},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1417,&quot;EventGroupId&quot;:17,&quot;EventTimestamp&quot;:1692933570089}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">2fc06422-392a-47ab-8b8a-bd2b2648bdda</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-5" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:45,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;ReportMenuItemUsage&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;SalesTableListPage#Display#[\&quot;mainmenu\&quot;,\&quot;SalesAndMarketing\&quot;,\&quot;SalesOrders\&quot;,\&quot;SalesTableListPage\&quot;]#Sales and marketing,Sales orders,All sales orders&quot;},&quot;CallbackId&quot;:&quot;16&quot;}],&quot;SequenceNumber&quot;:16}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">9d08f50f-aef8-4b2c-b26a-dc95afab8cac</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#11" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#11</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#11_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#12" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#12</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#12_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-7" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:46,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;62&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;63&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;10656&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${Grid10837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:17}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">1300c8a4-fcb3-488b-b155-28430abe011d</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#13" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#13</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#13_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#14" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#14</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#14_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-8" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:47,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;RequestEnhancedPreview&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11&quot;,&quot;10686&quot;,true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable_CustAccountAdv10890_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:18}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">dd69bd35-ca50-45a1-98d9-2713edea2580</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#15" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#15</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#15_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#16" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#16</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#16_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorCustTable_AutoEnhancedPreview_11_form11101_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CustTable_AutoEnhancedPreview_11_form11101_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;CustTable_AutoEnhancedPreview_11_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-9" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId RequestEnhancedPreview&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:22,&quot;EventGroupId&quot;:18,&quot;EventTimestamp&quot;:1692933572534},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId RequestEnhancedPreview&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1560,&quot;EventGroupId&quot;:18,&quot;EventTimestamp&quot;:1692933572534},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId RequestEnhancedPreview&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:20,&quot;EventGroupId&quot;:18,&quot;EventTimestamp&quot;:1692933572534},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:18,&quot;EventTimestamp&quot;:1692933572534}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">1300c8a4-fcb3-488b-b155-28430abe011d</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-10" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:48,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;64&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[false],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${CustTable_AutoEnhancedPreview_11_form11101_0}&quot;,&quot;TargetId&quot;:&quot;${CustTable_AutoEnhancedPreview_11_form11101_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:19}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">f2efbc00-12cc-42b6-b28c-25d46f761fe8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#19" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#19</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#19_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#20" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#20</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#20_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-11" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:19,&quot;EventTimestamp&quot;:1692933573894},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1350,&quot;EventGroupId&quot;:19,&quot;EventTimestamp&quot;:1692933573894},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:10,&quot;EventGroupId&quot;:19,&quot;EventTimestamp&quot;:1692933573894},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:19,&quot;EventTimestamp&quot;:1692933573894}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">1300c8a4-fcb3-488b-b155-28430abe011d</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-12" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:49,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;65&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;66&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;10902&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${Grid10837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:20}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">b2456cf7-b8bb-4a36-9081-1cb2f85b6997</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#23" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#23</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#23_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#24" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#24</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#24_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-13" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1,&quot;EventGroupId&quot;:20,&quot;EventTimestamp&quot;:1692933575755},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:918,&quot;EventGroupId&quot;:20,&quot;EventTimestamp&quot;:1692933575755},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:207,&quot;EventGroupId&quot;:20,&quot;EventTimestamp&quot;:1692933575755},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:20,&quot;EventTimestamp&quot;:1692933575755}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">b2456cf7-b8bb-4a36-9081-1cb2f85b6997</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-14" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:50,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;67&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;68&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11116&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${Grid10837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:21}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">3f89258f-87de-437c-b86f-261a6fdd728d</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#27" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#27</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#27_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#28" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#28</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#28_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-15" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1,&quot;EventGroupId&quot;:21,&quot;EventTimestamp&quot;:1692933577596},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:864,&quot;EventGroupId&quot;:21,&quot;EventTimestamp&quot;:1692933577596},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:168,&quot;EventGroupId&quot;:21,&quot;EventTimestamp&quot;:1692933577596},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:21,&quot;EventTimestamp&quot;:1692933577596}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">3f89258f-87de-437c-b86f-261a6fdd728d</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-16" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:51,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;69&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;70&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11312&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${Grid10837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:22}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7b3d609b-f95d-4064-9dc2-fd6b199fae8e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#31" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#31</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#31_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#32" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#32</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#32_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-17" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1,&quot;EventGroupId&quot;:22,&quot;EventTimestamp&quot;:1692933579478},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:943,&quot;EventGroupId&quot;:22,&quot;EventTimestamp&quot;:1692933579478},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:222,&quot;EventGroupId&quot;:22,&quot;EventTimestamp&quot;:1692933579478},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:22,&quot;EventTimestamp&quot;:1692933579478}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7b3d609b-f95d-4064-9dc2-fd6b199fae8e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-18" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:52,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;71&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;72&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11508&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${Grid10837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:23}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">68efd62f-88ce-4494-a433-dd764bcaaf12</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#35" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#35</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#35_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#36" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#36</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#36_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-19" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2,&quot;EventGroupId&quot;:23,&quot;EventTimestamp&quot;:1692933581336},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:896,&quot;EventGroupId&quot;:23,&quot;EventTimestamp&quot;:1692933581336},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:189,&quot;EventGroupId&quot;:23,&quot;EventTimestamp&quot;:1692933581336},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:23,&quot;EventTimestamp&quot;:1692933581336}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">68efd62f-88ce-4494-a433-dd764bcaaf12</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-20" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:53,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;73&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;74&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11704&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${Grid10837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:24}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">bf75a227-4a49-4949-9b20-8dafee5a3458</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#39" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#39</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#39_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#40" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#40</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#40_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-21" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2,&quot;EventGroupId&quot;:24,&quot;EventTimestamp&quot;:1692933583334},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1031,&quot;EventGroupId&quot;:24,&quot;EventTimestamp&quot;:1692933583334},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:239,&quot;EventGroupId&quot;:24,&quot;EventTimestamp&quot;:1692933583334},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:24,&quot;EventTimestamp&quot;:1692933583334}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">bf75a227-4a49-4949-9b20-8dafee5a3458</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-22" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:54,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;75&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;76&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11900&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${Grid10837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:25}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">c47ae28f-d231-4339-84ce-34c622145c45</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#43" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#43</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#43_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#44" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#44</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#44_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-23" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2,&quot;EventGroupId&quot;:25,&quot;EventTimestamp&quot;:1692933585115},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:850,&quot;EventGroupId&quot;:25,&quot;EventTimestamp&quot;:1692933585115},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:189,&quot;EventGroupId&quot;:25,&quot;EventTimestamp&quot;:1692933585115},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:25,&quot;EventTimestamp&quot;:1692933585115}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">c47ae28f-d231-4339-84ce-34c622145c45</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-24" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:55,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;77&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;78&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;12096&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${Grid10837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:26}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">13f6a1ce-eaed-4492-a81d-18a0ea94821d</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#47" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#47</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#47_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#48" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#48</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#48_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToSalesListPage/Services/TelemetryManager.svc/ProcessEventData-25" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2,&quot;EventGroupId&quot;:26,&quot;EventTimestamp&quot;:1692933586898},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:847,&quot;EventGroupId&quot;:26,&quot;EventTimestamp&quot;:1692933586899},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:200,&quot;EventGroupId&quot;:26,&quot;EventTimestamp&quot;:1692933586899},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:26,&quot;EventTimestamp&quot;:1692933586899}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">13f6a1ce-eaed-4492-a81d-18a0ea94821d</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3. Create new SO" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateNewSO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-26" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:56,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;QuickFilterControl&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTableListPage_form10625_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${SystemDefinedNewButton10848_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${SalesTableListPage_form10625_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:27}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">4f68608a-9313-4a1e-b680-c6ed9c8efac1</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#51" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#51</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#51_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#52" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#52</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#52_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesCreateOrder_form12626_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesCreateOrder_form12626_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesCreateOrder_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesTable_CustAccount12866_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesTable_CustAccount12866_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesTable_CustAccount&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorOK12890_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">OK12890_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;OK&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesTable_form12487_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesTable_form12487_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesTable_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSell12751_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">Sell12751_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;Sell&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesLineGrid12794_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesLineGrid12794_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesLineGrid&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesLine_ItemId12800_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesLine_ItemId12800_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesLine_ItemId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesLine_SalesQty12809_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesLine_SalesQty12809_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesLine_SalesQty&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventoryDimensionsGrid_InventSiteId12819_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventoryDimensionsGrid_InventSiteId12819_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventoryDimensionsGrid_InventSiteId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventoryDimensionsGrid_InventLocationId12820_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventoryDimensionsGrid_InventLocationId12820_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventoryDimensionsGrid_InventLocationId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSystemDefinedSaveButton12721_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SystemDefinedSaveButton12721_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SystemDefinedSaveButton&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateNewSO/Services/TelemetryManager.svc/ProcessEventData-28" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:13,&quot;EventGroupId&quot;:27,&quot;EventTimestamp&quot;:1692933601798},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2263,&quot;EventGroupId&quot;:27,&quot;EventTimestamp&quot;:1692933601798},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:400,&quot;EventGroupId&quot;:27,&quot;EventTimestamp&quot;:1692933601798},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2614,&quot;EventGroupId&quot;:27,&quot;EventTimestamp&quot;:1692933601798}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">4f68608a-9313-4a1e-b680-c6ed9c8efac1</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateNewSO/resources/images/emptyGrid.svg-27" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/images/emptyGrid.svg</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputCustomerAcc/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-29" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:57,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;79&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;80&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;14&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;14&quot;,{&quot;SalesTable_CustAccount&quot;:&quot;us&quot;,&quot;__selectionStart&quot;:&quot;2&quot;,&quot;__selectionEnd&quot;:&quot;2&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesCreateOrder_form12626_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable_CustAccount12866_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:28}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">2c78bef5-a5a9-467c-a8e2-9bee8380d6b3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#57" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#57</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#57_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#58" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#58</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#58_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorCustTableLookup_form12892_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CustTableLookup_form12892_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;CustTableLookup_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputCustomerAcc/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-30" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:58,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Filter&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[{&quot;SalesTable_CustAccount&quot;:&quot;us-001&quot;,&quot;@activeFilter&quot;:&quot;us-001&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${CustTableLookup_form12892_0}&quot;,&quot;TargetId&quot;:&quot;${CustTableLookup_form12892_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:29}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">c72727af-2ce9-4841-875a-26a6b849cb60</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#59" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#59</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#59_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#60" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#60</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#60_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorGrid13538_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">Grid13538_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;Grid&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputCustomerAcc/Services/TelemetryManager.svc/ProcessEventData-31" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup Filter&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:938,&quot;EventGroupId&quot;:28,&quot;EventTimestamp&quot;:1692933622419},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup Filter&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2373,&quot;EventGroupId&quot;:28,&quot;EventTimestamp&quot;:1692933622419},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup Filter&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:41,&quot;EventGroupId&quot;:28,&quot;EventTimestamp&quot;:1692933622419},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:28,&quot;EventTimestamp&quot;:1692933622419}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">2c78bef5-a5a9-467c-a8e2-9bee8380d6b3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputCustomerAcc/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-32" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:59,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;81&quot;,&quot;CommandName&quot;:&quot;LoadDataByTrackingId&quot;,&quot;FailureCallbackId&quot;:&quot;82&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;13541&quot;,25,${retried}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${CustTableLookup_form12892_0}&quot;,&quot;TargetId&quot;:&quot;${Grid13538_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:30}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">93a6095a-469d-4781-a1c9-bfc6f9cef468</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#63" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#63</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#63_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#64" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#64</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#64_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputCustomerAcc/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-33" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:60,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;83&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;84&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;us-001&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesCreateOrder_form12626_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable_CustAccount12866_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:31}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">770a9135-f4b6-42a9-b077-f1d7639ec6d8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#65" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#65</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#65_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#66" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#66</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#66_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputCustomerAcc/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-34" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:61,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;85&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${CustTableLookup_form12892_0}&quot;,&quot;TargetId&quot;:&quot;${CustTableLookup_form12892_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:32}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">63edfce7-d870-48c0-a8c6-440208707d46</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#67" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#67</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#67_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#68" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#68</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#68_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputCustomerAcc/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-35" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:62,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;SetServerSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;MCRCustSearchType&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesCreateOrder_form12626_0}&quot;,&quot;TargetId&quot;:&quot;${SalesCreateOrder_form12626_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleFirst&quot;:&quot;true&quot;,&quot;ThrottleId&quot;:&quot;${SalesCreateOrder_form12626_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:306602,&quot;ThrottleValue&quot;:500,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:33}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">65f38f07-e3af-4b0a-ac36-d223eeb4b6e9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#69" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#69</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#69_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#70" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#70</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#70_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputCustomerAcc/Services/TelemetryManager.svc/ProcessEventData-36" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue RequestClose SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:65,&quot;EventGroupId&quot;:29,&quot;EventTimestamp&quot;:1692933626554},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue RequestClose SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2433,&quot;EventGroupId&quot;:29,&quot;EventTimestamp&quot;:1692933626554},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue RequestClose SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:11,&quot;EventGroupId&quot;:29,&quot;EventTimestamp&quot;:1692933626554},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:29,&quot;EventTimestamp&quot;:1692933626554}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">770a9135-f4b6-42a9-b077-f1d7639ec6d8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClickOK/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-37" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:63,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesCreateOrder_form12626_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${OK12890_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${SalesCreateOrder_form12626_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:34}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">ec309a17-aa09-48aa-a051-bf37b9165b04</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#73" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#73</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#73_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#74" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#74</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#74_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClickOK/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-38" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:64,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;TabShown&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${Sell12751_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:35}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">d6ed67ca-faa6-43a8-a7ec-b64d93e29969</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#75" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#75</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#75_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#76" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#76</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#76_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorbuttonUpdateConfirm14690_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">buttonUpdateConfirm14690_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;buttonUpdateConfirm&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClickOK/Services/TelemetryManager.svc/ProcessEventData-39" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click TabShown&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:558,&quot;EventGroupId&quot;:30,&quot;EventTimestamp&quot;:1692933638086},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click TabShown&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3703,&quot;EventGroupId&quot;:30,&quot;EventTimestamp&quot;:1692933638086},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click TabShown&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:110,&quot;EventGroupId&quot;:30,&quot;EventTimestamp&quot;:1692933638086},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3390,&quot;EventGroupId&quot;:30,&quot;EventTimestamp&quot;:1692933638086}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">ec309a17-aa09-48aa-a051-bf37b9165b04</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="4. Create SO Line" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-40" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:65,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;ToggleMark&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesLineGrid12794_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:36}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">d4ccbc4a-c768-4ee0-9022-bb1760dca04b</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#79" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#79</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#79_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#80" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#80</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#80_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/TelemetryManager.svc/ProcessEventData-41" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ToggleMark&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:69,&quot;EventGroupId&quot;:31,&quot;EventTimestamp&quot;:1692933650727},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ToggleMark&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:965,&quot;EventGroupId&quot;:31,&quot;EventTimestamp&quot;:1692933650727},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ToggleMark&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:27,&quot;EventGroupId&quot;:31,&quot;EventTimestamp&quot;:1692933650727},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:31,&quot;EventTimestamp&quot;:1692933650727}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">d4ccbc4a-c768-4ee0-9022-bb1760dca04b</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-42" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:66,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;86&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;87&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;15&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;15&quot;,{&quot;SalesLine_ItemId&quot;:&quot;1000&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesLine_ItemId12800_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:37}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7dcca89c-041f-4fe2-9728-363cd79386b1</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#83" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#83</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#83_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#84" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#84</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#84_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSalesTable__SalesLine_ItemId_SysTCL_form14698_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SalesTable__SalesLine_ItemId_SysTCL_form14698_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SalesTable__SalesLine_ItemId_SysTCL_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/TelemetryManager.svc/ProcessEventData-43" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1200,&quot;EventGroupId&quot;:32,&quot;EventTimestamp&quot;:1692933653538},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1531,&quot;EventGroupId&quot;:32,&quot;EventTimestamp&quot;:1692933653538},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:79,&quot;EventGroupId&quot;:32,&quot;EventTimestamp&quot;:1692933653538},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:32,&quot;EventTimestamp&quot;:1692933653538}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">d4ccbc4a-c768-4ee0-9022-bb1760dca04b</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-44" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:67,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;88&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable__SalesLine_ItemId_SysTCL_form14698_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable__SalesLine_ItemId_SysTCL_form14698_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:80},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;89&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;90&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;1000&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesLine_ItemId12800_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:38}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">3d9338fa-55c7-4120-bde5-92858c5b6614</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#87" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#87</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#87_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#88" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#88</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#88_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/TelemetryManager.svc/ProcessEventData-45" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:34,&quot;EventGroupId&quot;:33,&quot;EventTimestamp&quot;:1692933656818},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1129,&quot;EventGroupId&quot;:33,&quot;EventTimestamp&quot;:1692933656818},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:87,&quot;EventGroupId&quot;:33,&quot;EventTimestamp&quot;:1692933656818},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:33,&quot;EventTimestamp&quot;:1692933656818}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">3d9338fa-55c7-4120-bde5-92858c5b6614</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-46" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:68,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;SetServerSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;SubBillRevenueSplit&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleFirst&quot;:&quot;true&quot;,&quot;ThrottleId&quot;:&quot;${SalesTable_form12487_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:339865,&quot;ThrottleValue&quot;:500,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:39}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">9d0deb03-a89b-4372-8eaf-d86937e18a1c</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#91" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#91</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#91_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#92" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#92</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#92_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/TelemetryManager.svc/ProcessEventData-47" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:557,&quot;EventGroupId&quot;:34,&quot;EventTimestamp&quot;:1692933659725},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:824,&quot;EventGroupId&quot;:34,&quot;EventTimestamp&quot;:1692933659725},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:34,&quot;EventTimestamp&quot;:1692933659725},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:34,&quot;EventTimestamp&quot;:1692933659725}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">9d0deb03-a89b-4372-8eaf-d86937e18a1c</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-48" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:68,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;91&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;92&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;10.00&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesLine_SalesQty12809_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:40}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">e143f976-e7dd-4ef9-92f9-c8632ebe7e2a</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#95" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#95</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#95_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#96" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#96</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#96_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-49" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:69,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;93&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;94&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;16&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;16&quot;,{&quot;InventoryDimensionsGrid_InventSiteId&quot;:&quot;1&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventSiteId12819_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:41}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">8d643889-d4a7-48b2-b20e-cc646eabf4fe</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#97" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#97</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#97_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#98" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#98</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#98_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor_form14713_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">_form14713_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/TelemetryManager.svc/ProcessEventData-50" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:479,&quot;EventGroupId&quot;:35,&quot;EventTimestamp&quot;:1692933670433},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:963,&quot;EventGroupId&quot;:35,&quot;EventTimestamp&quot;:1692933670433},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:84,&quot;EventGroupId&quot;:35,&quot;EventTimestamp&quot;:1692933670433},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:35,&quot;EventTimestamp&quot;:1692933670433}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">8d643889-d4a7-48b2-b20e-cc646eabf4fe</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-51" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:70,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;95&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${_form14713_0}&quot;,&quot;TargetId&quot;:&quot;${_form14713_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:85},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;96&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;97&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;1&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventSiteId12819_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:42}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">bed6fe4d-2ebc-425c-9aeb-c185a39133dc</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#101" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#101</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#101_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#102" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#102</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#102_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/v4/fullHashes:find-52" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="$ct" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">$ct</stringProp>
                    <stringProp name="Argument.value">application/x-protobuf</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">key</stringProp>
                    <stringProp name="Argument.value">AIzaSyC7jsptDS3am4tPx4r3nxis7IMjBc5Dovo</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="$httpMethod" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">$httpMethod</stringProp>
                    <stringProp name="Argument.value">POST</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="$req" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">$req</stringProp>
                    <stringProp name="Argument.value">ChUKE25hdmNsaWVudC1hdXRvLWZmb3gSGwoNCAUQBhgBIgMwMDEwARCyqRIaAhgDl11DRRouCAUQARoGCgQXIfDNGgYKBFyXO3UaBgoEXq-kjRoGCgRyd9TCGgYKBMnVlSwgAQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">safebrowsing.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v4/fullHashes:find</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="X-HTTP-Method-Override" elementType="Header">
                    <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-53" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:71,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;98&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;99&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;17&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;17&quot;,{&quot;InventoryDimensionsGrid_InventLocationId&quot;:&quot;11&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventLocationId12820_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:43}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">316c4a9f-7a7a-46d1-88f0-7690f5ae471d</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#105" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#105</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#105_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#106" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#106</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#106_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventLocationIdLookup_form14725_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventLocationIdLookup_form14725_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventLocationIdLookup_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/TelemetryManager.svc/ProcessEventData-54" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:64,&quot;EventGroupId&quot;:36,&quot;EventTimestamp&quot;:1692933676785},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:4361,&quot;EventGroupId&quot;:36,&quot;EventTimestamp&quot;:1692933676786},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:80,&quot;EventGroupId&quot;:36,&quot;EventTimestamp&quot;:1692933676786},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:36,&quot;EventTimestamp&quot;:1692933676786}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">bed6fe4d-2ebc-425c-9aeb-c185a39133dc</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-55" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:72,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;100&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${InventLocationIdLookup_form14725_0}&quot;,&quot;TargetId&quot;:&quot;${InventLocationIdLookup_form14725_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:88},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;101&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;102&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventLocationId12820_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:44}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">00a7d3a8-f7e5-4173-9f87-be2e19940484</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#109" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#109</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#109_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#110" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#110</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#110_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-56" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:73,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;SetServerSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;SalesLine_SalesPrice&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleFirst&quot;:&quot;true&quot;,&quot;ThrottleId&quot;:&quot;${SalesTable_form12487_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:360686,&quot;ThrottleValue&quot;:500,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:45}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">4f0d140e-29fe-4986-b34e-ea6ffb900994</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#111" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#111</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#111_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#112" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#112</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#112_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-57" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:74,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;SetServerSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;SalesLine_LineDiscGrid&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleFirst&quot;:&quot;true&quot;,&quot;ThrottleId&quot;:&quot;${SalesTable_form12487_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:362034,&quot;ThrottleValue&quot;:500,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:46}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">4696b72d-b338-4794-956e-e530d433c5da</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#113" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#113</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#113_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#114" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#114</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#114_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InputFirstLine/Services/TelemetryManager.svc/ProcessEventData-58" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue SetServerSelectedControl SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:132,&quot;EventGroupId&quot;:37,&quot;EventTimestamp&quot;:1692933681880},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue SetServerSelectedControl SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2606,&quot;EventGroupId&quot;:37,&quot;EventTimestamp&quot;:1692933681880},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue SetServerSelectedControl SetServerSelectedControl&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1,&quot;EventGroupId&quot;:37,&quot;EventTimestamp&quot;:1692933681881},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:37,&quot;EventTimestamp&quot;:1692933681881}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">00a7d3a8-f7e5-4173-9f87-be2e19940484</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5. Save SO" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveSO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-59" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:74,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;SalesLine_LineDiscGrid&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${SystemDefinedSaveButton12721_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${SalesTable_form12487_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:47}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7d783c62-6732-4e1d-a79a-42ac4eabae21</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#117" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#117</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#117_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#118" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#118</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#118_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveSO/Services/TelemetryManager.svc/ProcessEventData-60" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:11,&quot;EventGroupId&quot;:38,&quot;EventTimestamp&quot;:1692933690773},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1619,&quot;EventGroupId&quot;:38,&quot;EventTimestamp&quot;:1692933690773},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:82,&quot;EventGroupId&quot;:38,&quot;EventTimestamp&quot;:1692933690773},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1647,&quot;EventGroupId&quot;:38,&quot;EventTimestamp&quot;:1692933690773}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7d783c62-6732-4e1d-a79a-42ac4eabae21</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="6. Confirm SO" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConfirmSO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-61" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:75,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;SalesLine_LineDiscGrid&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;TargetId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SalesTable_form12487_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${buttonUpdateConfirm14690_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${SalesTable_form12487_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:385106,&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:48}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">d5d90086-4bdf-435d-a14d-19aa2f0a708f</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#121" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#121</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#121_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#122" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#122</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#122_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSysOperationSandboxForm_form14759_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SysOperationSandboxForm_form14759_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SysOperationSandboxForm_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor__TimerForAsyncTaskPolling14824_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">__TimerForAsyncTaskPolling14824_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;__TimerForAsyncTaskPolling&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConfirmSO/Services/TelemetryManager.svc/ProcessEventData-62" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:25,&quot;EventGroupId&quot;:39,&quot;EventTimestamp&quot;:1692933706244},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2444,&quot;EventGroupId&quot;:39,&quot;EventTimestamp&quot;:1692933706244},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:191,&quot;EventGroupId&quot;:39,&quot;EventTimestamp&quot;:1692933706244},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2570,&quot;EventGroupId&quot;:39,&quot;EventTimestamp&quot;:1692933706244}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">d5d90086-4bdf-435d-a14d-19aa2f0a708f</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConfirmSO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-63" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:${retried},&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:76,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;103&quot;,&quot;CommandName&quot;:&quot;Elapsed&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SysOperationSandboxForm_form14759_0}&quot;,&quot;TargetId&quot;:&quot;${__TimerForAsyncTaskPolling14824_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;${retried}&quot;,&quot;ThrottleTimestamp&quot;:${retried},&quot;ThrottleValue&quot;:${retried},&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:49}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">1f0977e9-5564-4e6a-baa0-4030ae4482e4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#125" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#125</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#125_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#126" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#126</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#126_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ConfirmSO/Services/TelemetryManager.svc/ProcessEventData-64" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1,&quot;EventGroupId&quot;:40,&quot;EventTimestamp&quot;:1692933712184},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:798,&quot;EventGroupId&quot;:40,&quot;EventTimestamp&quot;:1692933712184},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Elapsed&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:209,&quot;EventGroupId&quot;:40,&quot;EventTimestamp&quot;:1692933712184},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:${retried},&quot;EventGroupId&quot;:40,&quot;EventTimestamp&quot;:1692933712184}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">1f0977e9-5564-4e6a-baa0-4030ae4482e4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">ffd429a5-89a2-45bf-bff3-08151a41ce2a</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=${retried}.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#3}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">vOIqG%2FTVEc9h%2B3v1Y3S1Cg%3D%3D.DYP8GoIUHXKEPUkzv5uQOI0Z7SX2ki%2BypxUAWc2PWxTj227MvPQ5CqCgzBldF4ZtSWTPI1nuBv5Q2TJrURZn6ShQ34w6TgsLWj23UBOygurbkWTeEpHuZtI7k1sO3SgBbcDL8B7J2l5mRkncTMX8OUwe7DO58fzIaBCVDq%2BdsSrEq42dqeMK%2Bz58B3cuQUWEF5dq%2BFeHS2c6XF%2FnaZVd41do7ZPbD9zx8kUqwsV3GMv%2FWRY9PTi%2FPpDxUxEacvm8m1elfnRp%2BBRq7YBg5E5YOuuVFIm%2BLwKwLGbIwno5gaYUrJHIoyxBupozNJQB6lcCoZhiavWDK4NWJxusXOu8aQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="7. Sign out" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/Logout-65" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=${retried}.9,image/avif,image/webp,*/*;q=${retried}.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/Services/SessionManager.svc/EndSessions-66" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${Sid#3}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/SessionManager.svc/EndSessions</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/${tenant}/oauth2/logout-67" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=${retried}.9,image/avif,image/webp,*/*;q=${retried}.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/Logout-68" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=${retried}.9,image/avif,image/webp,*/*;q=${retried}.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/${tenant}/oauth2/logout-69" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=${retried}.9,image/avif,image/webp,*/*;q=${retried}.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/${tenant}/oauth2/logout-70" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/?cmp=USMF&amp;mi=SalesTableListPage</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=${retried}.9,image/avif,image/webp,*/*;q=${retried}.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgid</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgact" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgact</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgact_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgrequestid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - ApiCanary" enabled="true">
                <stringProp name="RegexExtractor.refname">ApiCanary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">ApiCanary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Canary" enabled="true">
                <stringProp name="RegexExtractor.refname">Canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Canary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/-71" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="cmp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cmp</stringProp>
                    <stringProp name="Argument.value">USMF</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mi</stringProp>
                    <stringProp name="Argument.value">SalesTableListPage</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=${retried}.9,image/avif,image/webp,*/*;q=${retried}.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - state1" enabled="true">
                <stringProp name="RegexExtractor.refname">state1</stringProp>
                <stringProp name="RegexExtractor.regex">&amp;state=([^&amp;]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">state1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - nonce" enabled="true">
                <stringProp name="RegexExtractor.refname">nonce</stringProp>
                <stringProp name="RegexExtractor.regex">nonce=([A-Za-z0-9-.]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">nonce_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/${tenant}/oauth2/authorize-72" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">00000015-0000-0000-c000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__urldecode(${state1})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${nonce}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="max_age" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">max_age</stringProp>
                    <stringProp name="Argument.value">86400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=${retried}.9,image/avif,image/webp,*/*;q=${retried}.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - state1" enabled="true">
                <stringProp name="RegexExtractor.refname">state1</stringProp>
                <stringProp name="RegexExtractor.regex">&amp;state=([^&amp;]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">state1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/${tenant}/oauth2/authorize-73" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">00000015-0000-0000-c000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__urldecode(${state1})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${nonce}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="max_age" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">max_age</stringProp>
                    <stringProp name="Argument.value">86400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=${retried}.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=${retried}.9,image/avif,image/webp,*/*;q=${retried}.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.${retried} (Windows NT 10.${retried}; Win64; x64; rv:109.${retried}) Gecko/20100101 Firefox/116.${retried}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgid</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgact" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgact</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgact_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Client-request-id" enabled="true">
                <stringProp name="RegexExtractor.refname">Client-request-id</stringProp>
                <stringProp name="RegexExtractor.regex">client-request-id=(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Client-request-id_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgrequestid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - ApiCanary" enabled="true">
                <stringProp name="RegexExtractor.refname">ApiCanary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">ApiCanary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Canary" enabled="true">
                <stringProp name="RegexExtractor.refname">Canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Canary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Ctx" enabled="true">
                <stringProp name="RegexExtractor.refname">Ctx</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Ctx_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT1" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT1</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;FlowToken&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename">C:\apache-jmeter\bin\FnO_Sample\SampleReleased_CreateSOAndConfirm_Run.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
        <boolProp name="displayJMeterProperties">false</boolProp>
        <boolProp name="displayJMeterVariables">true</boolProp>
        <boolProp name="displaySamplerProperties">true</boolProp>
        <boolProp name="displaySystemProperties">false</boolProp>
      </DebugPostProcessor>
      <hashTree/>
      <com.blazemeter.jmeter.correlation.CorrelationProxyControl guiclass="com.blazemeter.jmeter.correlation.CorrelationProxyControlGui" testclass="com.blazemeter.jmeter.correlation.CorrelationProxyControl" testname="bzm - Correlation Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8899</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name">Java</stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">false</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">SignOut</stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
        <stringProp name="CorrelationProxyControl.components">com.blazemeter.jmeter.correlation.siebel.SiebelCounterCorrelationReplacement,com.blazemeter.jmeter.correlation.siebel.SiebelRowIdCorrelationReplacement,com.blazemeter.jmeter.correlation.siebel.SiebelRowCorrelationExtractor,com.blazemeter.jmeter.correlation.siebel.SiebelRowParamsCorrelationReplacement</stringProp>
        <collectionProp name="CorrelationProxyControl.groups">
          <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.RulesGroupTestElement" enabled="true">
            <stringProp name="CorrelationProxyControl.RulesGroup.id">Group-1</stringProp>
            <elementProp name="CorrelationProxyControl.RulesGroup.rules" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRulesTestElement">
              <collectionProp name="CorrelationRules.rules">
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">state1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">RESPONSE_HEADERS</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&amp;state=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">state=([A-Za-z=&amp;${}.%0-9_-]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${state1})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">nonce</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">RESPONSE_HEADERS</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">nonce=([A-Za-z0-9-.]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">nonce=([A-Za-z0-9-.]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgid=(.+?)&amp;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgid: ([0-9]{4})</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgact</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgact=(.+?)&amp;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgact</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgact: ([0-9]{4})</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Client-request-id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">client-request-id=(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">client-request-id=(.+?)&amp;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Client-request-id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">client-request-id=(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">client-request-id: ([^\s]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgrequestid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgrequestid=(.{36})</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">ApiCanary</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">canary: ([^\s]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Canary</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">canary=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Ctx</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;originalRequest&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Ctx</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">ctx=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">SFT</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;flowToken&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">SFT</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">flowToken=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">code</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">name=&quot;code&quot; value=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">code=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Idtoken</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;id_token&quot; value=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">id_token=([A-Za-z0-9.\s-_]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">SessionState</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">name=&quot;session_state&quot; value=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">session_state=([A-Za-z${}()_0-9-]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${SessionState}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">SFT1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;FlowToken&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">flowToken=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Token</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;wresult&quot; value=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wresult=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__unescapeHtml(${Token})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Sid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">RESPONSE_HEADERS</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">ms-dyn-sid: (.+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Sid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">RESPONSE_HEADERS</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">{&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">-1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;RootId&quot;:&quot;([0-9]+_[0-9]+)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">{&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">-1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;TargetId&quot;:&quot;([0-9]+_[0-9]+)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">{&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">-1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;ThrottleId&quot;:&quot;([0-9]+_[0-9]+)_TG&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Hpgrequestid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgrequestid: (.{36})</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wa</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wa=(.+?)&amp;amp</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wa=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wtrealm</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wtrealm=(.+?)&amp;amp</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wtrealm=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${Wtrealm})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wctx</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wctx=(.+?)&amp;amp</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wctx=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${Wctx})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wct</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wct=(.+?)&amp;amp</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wct=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${Wct})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wreply</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wreply=(.+?)&quot;&gt;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wreply=(.+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${Wreply})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">DashboardID</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;Id&quot;\:&quot;([0-9A-F_]{2,})&quot;,&quot;Name&quot;:&quot;DefaultDashboard_form&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;RootId&quot;:&quot;(.+?)&quot;,&quot;T</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">TimesyncID</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;Id&quot;\:&quot;([0-9A-F_]{2,})&quot;,&quot;Name&quot;:&quot;__TimerForAsyncTaskPolling&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;TargetId&quot;:&quot;(.+?)&quot;,&quot;Th</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">refVar27</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">param=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">param=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">refVar28</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">param=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">param=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </elementProp>
        </collectionProp>
        <stringProp name="CorrelationProxyControl.responseFilter"></stringProp>
      </com.blazemeter.jmeter.correlation.CorrelationProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\apache-jmeter\bin\FnO_Sample\CreateSOAndConfirm.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
