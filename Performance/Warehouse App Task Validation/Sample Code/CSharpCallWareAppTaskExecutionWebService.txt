using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Identity.Client;
using System.Net.Http.Headers;
using System.Net.Http;

using System.Text.Json;


namespace WHSPerfAPICall
{

    public class Request
    {
        public long WHSValidatorRunTaskRecId
        {
            get;
            set;
        }
        public string userID
        {
            get;
            set;
        }

        public string replacementVariables
        {
            get;
            set;
        }

        public string replacementVariableList
        {
            get;
            set;
        }


    }
    class Program
    {
        static void Main(string[] args)
        {
            List<Task> taskList = new List<Task>();
            
            string[] users = {"hn-1"};

            foreach (string user in users)
            {
                
                var task = Run(5637146101, user); //ftscmlab1
                
                taskList.Add(task);
            }
            Task.WaitAll(taskList.ToArray());
            Console.ReadKey();
        }

        //static async Task Run(long recId, string userID, string replacementVar)
        static async Task Run(long _WHSValidatorRunTaskRecId, string _userID)
        {
            const string appId = "<appId>";
            const string appSecret = "<appSecret>";
            var aadClient = ConfidentialClientApplicationBuilder.Create(appId).WithAuthority("https://login.windows.net/<tenant>").WithClientSecret(appSecret).Build();
           
            var token = await aadClient.AcquireTokenForClient(new[] { "https://ftscmlab1.sandbox.operations.dynamics.com/.default" }).ExecuteAsync();

            using (var client = new HttpClient())
            {
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(token.TokenType, token.AccessToken);
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

               
                var url = "https://ftscmlab1.sandbox.operations.dynamics.com//api/services/WHSValidatorRunInstanceServices/WHSValidatorRunInstanceExecuteService/runInstanceWithParameters";
            
                var r = new
                {
                    _contract = new
                    {
                        WHSValidatorRunTaskRecId = _WHSValidatorRunTaskRecId,
                        UserId = _userID,
                        
                        ReplacementVariablesList = new[] { new { ValidatorVariableName = "WHSWorkLicensePlateIdVar", ValidatorVariableValue = "USMF-000313" }, new { ValidatorVariableName = "TargetLicensePlateIdVar", ValidatorVariableValue = "000USMF-0000003254" } }
                    }
                };

                var payload = JsonSerializer.Serialize(r, new JsonSerializerOptions() { });
                Console.WriteLine(payload);
                Console.WriteLine(payload.Length);
                Console.WriteLine($"POST {url}");
                var response = await client.PostAsync(url, new StringContent(payload, Encoding.UTF8, "application/json"));
                Console.WriteLine(response.StatusCode);
                Console.WriteLine(await response.Content.ReadAsStringAsync());

            }
        }
    }
}
